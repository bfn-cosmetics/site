'use client'

import useEmblaCarousel from 'embla-carousel-react'

import { cn } from '@/shared/lib/class-names'
import { usePrevNextButtons } from '@/shared/lib/embla'
import { MEDIA_TABLE, MEDIA_TABLE_DESK } from '@/shared/modal/constant.media'
import { SectionTitle } from '@/shared/ui/section-title'

import styles from './section.module.scss'

const breakpoints: Record<string, any> = {}
breakpoints[`(min-width: ${MEDIA_TABLE}px)`] = { active: false }
breakpoints[`(min-width: ${MEDIA_TABLE_DESK}px)`] = { active: true }
const OPTIONS: Record<string, any> = {
	active: true,
	breakpoints
}

export function SectionProducts() {
	const [emblaRef, emblaApi] = useEmblaCarousel(OPTIONS)
	const { onPrevButtonClick, onNextButtonClick } = usePrevNextButtons(emblaApi)

	return (
		<section className={cn(styles.section, 'relative')}>
			<div className='container'>
				<div className='flex'>
					<SectionTitle
						className={cn(styles.title)}
						words={[{ word: 'средства' }]}
					/>
					<SVGSign className={cn(styles.titleSign, 'title-section-sizes')} />
				</div>
				<div
					className={cn(styles.slideEmbla, 'embla relative')}
					ref={emblaRef}
				>
					<div className={cn(styles.slideWrap, 'embla__container')}>
						<div className={cn(styles.slide)}>
							<div className='aspect-[410/457] bg-slate-200'></div>
							<div className={cn(styles.hr, 'text-accent')} />
							<div className={cn(styles.text)}>Очищение</div>
						</div>
						<div className={cn(styles.slide)}>
							<div className='aspect-[410/457] bg-slate-200'></div>
							<div className={cn(styles.hr, 'text-accent')} />
							<div className={cn(styles.text)}>Тонизирование</div>
						</div>
						<div className={cn(styles.slide)}>
							<div className='aspect-[410/457] bg-slate-200'></div>
							<div className={cn(styles.hr, 'text-accent')} />
							<div className={cn(styles.text)}>Сыворотки</div>
						</div>
						<div className={cn(styles.slide)}>
							<div className='aspect-[410/457] bg-slate-200'></div>
							<div className={cn(styles.hr, 'text-accent')} />
							<div className={cn(styles.text)}>Бустеры/Концентраты</div>
						</div>
						<div className={cn(styles.slide)}>
							<div className='aspect-[410/457] bg-slate-200'></div>
							<div className={cn(styles.hr, 'text-accent')} />
							<div className={cn(styles.text)}>кремы</div>
						</div>
						<div className={cn(styles.slide)}>
							<div className='aspect-[410/457] bg-slate-200'></div>
							<div className={cn(styles.hr, 'text-accent')} />
							<div className={cn(styles.text)}>маски</div>
						</div>
					</div>
					<div className={cn(styles.buttonWrapper)}>
						<button
							className={cn(styles.button)}
							onClick={onPrevButtonClick}
						>
							<SVGArrow />
						</button>
						<button
							className={cn(styles.button)}
							onClick={onNextButtonClick}
						>
							<SVGArrow className='rotate-180' />
						</button>
					</div>
				</div>
			</div>
		</section>
	)
}

function SVGSign({ className }: { className?: string }) {
	return (
		<svg
			xmlns='http://www.w3.org/2000/svg'
			width='315'
			height='202'
			viewBox='0 0 315 202'
			fill='none'
			className={className}
		>
			<path
				d='M181.9 82.78C180.19 78.98 176.96 76.13 173.16 74.42C165.18 71.19 155.68 72.9 147.7 75.37C142.19 77.08 136.87 78.98 131.74 81.45C132.69 80.5 133.64 79.55 134.4 78.41C137.63 74.99 140.29 71.19 142.95 67.2C145.42 63.21 148.08 58.84 149.22 54.09C150.36 50.1 149.6 45.73 145.99 43.07C142.95 41.17 138.96 40.79 135.54 41.17C131.55 41.74 127.56 43.07 123.76 44.4C119.39 46.11 115.21 47.82 111.03 49.72C105.52 52.19 100.01 54.85 94.69 57.89C102.29 44.21 110.65 30.72 118.44 17.04C121.1 12.29 123.76 7.53999 126.8 2.78999C127.37 1.84 125.85 0.889997 125.09 1.84C119.2 10.96 114.26 20.46 108.75 29.77C103.62 38.13 98.68 46.49 93.74 55.04C92.79 56.75 91.84 58.46 90.89 60.17C82.34 65.3 73.98 71 66.19 77.46C53.08 88.48 41.49 101.21 31.61 115.08C21.92 128.95 14.13 143.96 8.43 159.73C5.58 167.14 3.11 174.93 1.97 182.72C1.21 187.85 0.449998 196.97 6.53 199.06C12.61 201.15 18.31 194.69 21.54 190.7C27.24 184.05 31.8 176.45 36.17 169.04C46.43 151.56 55.93 133.89 65.05 116.03C73.79 98.55 82.34 81.26 91.46 63.97C91.65 63.59 91.84 63.21 92.03 62.64C93.36 62.07 94.5 61.31 95.64 60.55C103.24 56.37 111.03 52.57 119.01 49.34C123 47.63 126.99 46.11 130.98 44.97C134.4 44.02 138.39 43.45 141.81 44.4C152.26 47.25 143.71 60.55 140.29 65.87C135.35 73.66 129.27 80.5 122.24 86.39C121.86 86.58 121.67 86.77 121.29 86.96C120.15 87.72 119.01 88.48 117.87 89.05C115.59 90.57 113.31 92.09 111.22 93.8C109.7 94.94 111.03 97.41 112.74 96.46C115.78 94.56 118.82 92.66 121.67 90.38C127.37 86.96 133.26 84.11 139.53 81.64C147.51 78.41 156.44 75.37 165.18 75.75C168.79 76.13 172.59 77.08 175.63 79.36C178.86 82.02 180.57 86.01 180.57 90.19C180.57 94.94 179.05 99.5 177.15 103.87C175.25 108.05 172.97 112.23 170.69 116.22C161.38 131.99 148.27 145.67 133.07 156.12C125.66 161.06 116.92 166.57 107.61 166.38C103.24 166.38 99.06 164.48 96.4 161.06C93.74 157.64 92.41 153.27 92.03 149.09C90.7 132.75 101.91 116.6 117.3 110.9C119.2 110.33 121.1 109.76 123.19 109.38C124.52 109.19 123.95 107.1 122.62 107.29C113.88 108.81 105.9 112.99 99.82 119.64C93.93 125.91 89.94 134.27 88.99 143.01C88.04 151.75 90.32 162.39 98.49 167.14C107.23 172.27 118.06 168.47 126.04 164.1C143.33 154.41 158.34 139.97 169.36 123.63C172.21 119.45 174.68 115.08 176.96 110.71C179.24 106.34 181.33 101.78 182.66 97.03C183.8 92.28 183.99 87.15 181.9 82.78ZM71.7 97.41C63.15 114.13 54.6 131.04 45.48 147.38C40.73 155.93 35.98 164.29 30.85 172.46C26.67 179.3 22.3 186.52 16.41 192.22C14.51 194.12 12.23 196.21 9.57 196.59C7.29 196.97 5.58 195.45 5.01 193.36C4.06 190.51 4.25 187.09 4.63 184.05C5.2 180.25 5.96 176.64 6.91 173.03C11.28 157.83 17.93 143.01 26.1 129.14C34.27 115.27 44.34 102.35 55.93 90.76C65.62 81.07 76.45 72.52 88.23 65.11C82.53 75.75 77.02 86.58 71.7 97.41ZM250.99 33.57C248.14 36.61 245.86 40.41 243.39 43.83C240.73 47.63 238.07 51.24 235.6 55.04C230.28 63.02 224.96 70.81 220.02 78.79C210.33 94.18 201.21 109.95 193.23 126.29C190.76 127.05 188.48 128.19 186.2 129.14C185.44 129.52 185.25 131.04 186.2 131.42C187.53 131.99 188.67 132.75 189.62 133.51C186.77 139.78 183.92 146.05 181.45 152.32C178.03 160.68 174.61 169.04 173.09 177.97C172.33 181.39 171.57 185.38 173.09 188.8C174.42 191.84 177.84 193.17 180.88 191.84C184.3 190.32 186.77 186.71 188.86 183.67C191.14 180.25 193.04 176.64 194.75 172.84C199.31 161.63 202.54 143.2 193.23 133.32C194.18 131.61 194.94 129.71 195.89 128C210.71 122.68 227.81 121.35 242.06 127.62C243.2 128.19 243.96 126.67 243.01 126.1C234.65 121.35 224.58 120.4 214.89 121.35C209 121.73 203.11 123.06 197.41 124.77C204.63 110.33 212.61 96.46 220.97 82.78C226.1 74.61 231.23 66.44 236.36 58.27C239.02 54.28 241.68 50.29 244.15 46.3C246.62 42.69 248.71 38.7 251.18 35.28C251.56 34.9 251.75 34.52 251.94 34.33C252.32 33.76 251.56 33 250.99 33.57ZM193.61 167.9C192.47 171.7 190.95 175.31 188.86 178.54C187.15 181.77 185.06 185 182.4 187.47C181.26 188.61 179.36 190.13 177.46 189.37C176.13 188.99 175.56 187.28 175.37 185.76C174.99 182.34 175.94 178.35 176.89 174.93C178.98 166.76 182.21 158.78 185.25 150.99C187.34 146.05 189.62 140.92 191.9 135.98C198.74 144.15 196.84 158.4 193.61 167.9ZM190.76 131.04C190.38 130.85 190 130.66 189.81 130.47C190.38 130.09 190.95 129.9 191.52 129.71C191.14 130.09 190.95 130.66 190.76 131.04ZM312.598 127.81C309.368 130.09 306.328 132.56 303.098 134.46C299.678 136.55 296.258 138.45 292.458 139.78C289.038 140.92 285.428 141.87 281.628 142.06C280.298 142.06 278.588 142.06 277.258 141.3C275.548 140.35 275.548 138.45 275.738 136.55C276.308 131.61 279.348 122.3 271.938 120.78C269.278 120.21 266.238 120.97 263.768 121.54C259.778 122.68 255.978 124.58 252.178 126.48C248.188 128.38 244.388 130.85 240.968 133.89C240.018 134.65 239.068 135.41 238.118 136.36C239.828 132.94 241.728 129.71 244.008 126.67C247.808 121.54 252.178 117.17 256.928 112.8C257.118 112.61 256.738 112.04 256.358 112.23C245.338 119.07 237.168 130.66 232.418 142.63C231.848 143.96 234.128 144.91 234.698 143.58C235.458 142.06 236.788 141.11 237.928 139.97C239.448 138.64 240.778 137.31 242.298 135.98C245.528 133.32 248.948 131.04 252.558 129.14C256.358 127.24 260.158 125.34 264.148 124.2C266.428 123.44 269.848 122.3 272.318 123.44C275.738 124.96 274.408 129.71 274.028 132.56C273.458 135.41 272.508 139.02 274.218 141.68C275.928 143.96 279.158 144.34 281.628 144.34C285.238 144.15 288.848 143.39 292.268 142.25C296.258 140.92 300.058 139.02 303.668 136.74C307.278 134.65 310.698 132.18 313.548 129.14C314.118 128.38 313.358 127.24 312.598 127.81Z'
				fill='#CB9E76'
			/>
		</svg>
	)
}

function SVGArrow({ className }: { className?: string }) {
	return (
		<svg
			xmlns='http://www.w3.org/2000/svg'
			width='65'
			height='65'
			viewBox='0 0 65 65'
			fill='none'
			className={className}
		>
			<path
				d='M37.8015 32.3431H26.8857M26.8857 32.3431L30.3971 35.9297M26.8857 32.3431L30.3971 28.7564M1 32.5C1 15.103 15.103 0.999998 32.5 1C49.897 1 64 15.103 64 32.5C64 49.897 49.897 64 32.5 64C15.103 64 0.999998 49.897 1 32.5Z'
				stroke='currentColor'
			/>
		</svg>
	)
}
